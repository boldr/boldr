version: '3'

services:
  # nginx:
  #   image: nginx:1.13.1-alpine
  #   read_only: true
  #   container_name: boldr_nginx
  #   tmpfs:
  #     - /var/cache/nginx
  #     - /var/log/nginx
  #     - /var/run
  #   depends_on:
  #     - api
  #   ports:
  #     - "8080:80"
  #     - "8443:443"
  #   # restart: always
  #   volumes:
  #     - ./.boldr/docker/nginx/snippets:/etc/nginx/snippets:ro
  #     - ./.boldr/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
  # api:
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile
  #     args:
  #       - NODE_ENV=development
  #   # you can use standard debug config or experimental node inspect
  #   command: node ../node_modules/nodemon/bin/nodemon.js
  #   container_name: boldr_api
  #   hostname: api
  #   user: node
  #   working_dir: /opt/app
  #   depends_on:
  #     - db
  #     - redis
  #   environment:
  #     - NODE_ENV=development
  #     - CORS_ORIGIN=http://localhost:3001,http://localhost:3000
  #     - DATABASE_URL=postgres://postgres@db:5432/boldr
  #     - DATABASE_DEBUG=false
  #     - REDIS_URL=redis://redis:6379/0
  #   expose:
  #     - "8080"
  #   ports:
  #     - "5858:5858"
  #     - "9229:9229"
  #   volumes:
  #     - yarn:/root/.cache/yarn
  #     - ./api/:/opt/app
  db:
    build: ./.boldr/docker/postgres
    container_name: boldr_db
    restart: always
    expose:
      - "5432"
    ports:
      - "5432:5432"
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - db:/var/lib/postgresql/data
  redis:
    image: redis:3.2.10-alpine
    container_name: boldr_redis
    restart: always
    expose:
      - "6379"
    ports:
      - "6379:6379"
    volumes:
      - redis:/data

volumes:
  db:
  redis:
