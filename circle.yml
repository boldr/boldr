machine:
  node:
    version: 6
  timezone:
    America/Denver
  services:
    - docker

  environment:
    CIRCLE_ENV: test
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    DATABASE_URL: postgres://postgres:password@db:5432/postgres
    NODE_ENV: testing

dependencies:
  cache_directories:
    - "~/cache/"
    - node_modules
  override:
    - docker info
    # use circleci's docker cache workaround
    - mkdir -p ~/cache/
    - if [ -e ~/cache/docker/image.tar ]; then echo "Loading image.tar"; docker load -i ~/cache/docker/image.tar || rm ~/cache/docker/image.tar; fi
    # build image
    - docker build -t boldr/test ./docker/postgres
    - docker inspect -f '{{.Config.Image}}' boldr/test
    # Redis
    - docker pull strues/redis
    # go npm
    - make install
test:
  override:
    - docker run -d --name db -e POSTGRES_PASSWORD=password --net host boldr/test
    - docker run -d --name boldr_redis --net host strues/redis
    - make test-api

  post:
    # Clean up old image and save the new one
    - mkdir -p ~/cache/docker; test '!' -e ~/cache/docker/image.tar || rm ~/cache/docker/image.tar; docker save boldr/test > ~/cache/docker/image.tar; ls -l ~/cache/docker
