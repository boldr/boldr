{"version":3,"file":"boldr-config.esm.js","sources":["../src/lib/defaultConfig.js","../src/lib/loadConfig.js","../src/index.js"],"sourcesContent":["/* eslint-disable camelcase */\n\nexport default {\n  server: {\n    websiteUrl: 'http://localhost:3000',\n    port: 2121,\n    protocol: 'http',\n    host: '0.0.0.0',\n    prefix: '/api/v1',\n    graphiql: true,\n    optics: true,\n    logging: {\n      level: 'debug',\n      file: false,\n    },\n    token: {\n      secret: 'b0ldrk3kwi11s15',\n      expiration: 604800000,\n    },\n    mail: {\n      host: 'smtp.example.com',\n      user: 'user@user.com',\n      password: 'password',\n      port: 465,\n      ssl: true,\n      from: 'hello@boldr.io',\n    },\n    db: {\n      url: 'postgres://postgres:password@localhost:5432/boldr',\n    },\n    redis: {\n      url: 'redis://127.0.0.1:6379/0',\n    },\n  },\n  paths: {\n    publicPath: '/static/',\n    entry: {\n      server: 'src/serverEntry.js',\n      client: 'src/clientEntry.js',\n    },\n    output: {\n      server: 'build/server',\n      client: 'build/client',\n    },\n    vendor: 'src/vendor.js',\n  },\n  vendor: [],\n  tools: {\n    profile: false,\n  },\n};\n","import path from 'path';\nimport merge from 'lodash.merge';\nimport defaultConfig from './defaultConfig';\n\nconst debug = require('debug')('boldr:config:loadConfig');\n\nexport default function loadConfig(configPath) {\n  debug('Loading config file:', configPath);\n  const configModulePath = configPath;\n  // first clean up require cache so we always load fresh config\n  delete require.cache[configModulePath];\n  // then require the fresh config\n  const config = require(configModulePath); // eslint-disable-line global-require\n  return merge(defaultConfig, config);\n}\n","import path from 'path';\nimport fs from 'fs-extra';\nimport appRoot from '@boldr/utils/lib/node/appRoot';\nimport loadConfig from './lib/loadConfig';\n\nconst configFileName = 'config.js';\nconst ROOT_DIR = appRoot.get();\n\nfunction freeze(config) {\n  return Object.freeze(\n    Object.keys(config).reduce((result, key) => {\n      const descriptor = { enumerable: true };\n      if (typeof config[key] === 'function') {\n        descriptor.get = config[key];\n      } else {\n        descriptor.value = config[key];\n      }\n      return Object.defineProperty(result, key, descriptor);\n    }, {}),\n  );\n}\n\nexport default function getConfig() {\n  const configPath = path.resolve(ROOT_DIR, `.boldr/${configFileName}`);\n  fs.ensureFileSync(configPath);\n  const config = loadConfig(configPath);\n\n  return freeze(config);\n}\n"],"names":["debug","require","loadConfig","configPath","configModulePath","cache","config","merge","defaultConfig","configFileName","ROOT_DIR","appRoot","get","freeze","Object","keys","reduce","result","key","descriptor","enumerable","value","defineProperty","getConfig","path","resolve","ensureFileSync"],"mappings":";;;;;;AAAA;;AAEA,oBAAe;UACL;gBACM,uBADN;UAEA,IAFA;cAGI,MAHJ;UAIA,SAJA;YAKE,SALF;cAMI,IANJ;YAOE,IAPF;aAQG;aACA,OADA;YAED;KAVF;WAYC;cACG,iBADH;kBAEO;KAdR;UAgBA;YACE,kBADF;YAEE,eAFF;gBAGM,UAHN;YAIE,GAJF;WAKC,IALD;YAME;KAtBF;QAwBF;WACG;KAzBD;WA2BC;WACA;;GA7BI;SAgCN;gBACO,UADP;WAEE;cACG,oBADH;cAEG;KAJL;YAMG;cACE,cADF;cAEE;KARL;YAUG;GA1CG;UA4CL,EA5CK;SA6CN;aACI;;CA9Cb;;ACEA,IAAMA,QAAQC,QAAQ,OAAR,EAAiB,yBAAjB,CAAd;;AAEA,AAAe,SAASC,UAAT,CAAoBC,UAApB,EAAgC;QACvC,sBAAN,EAA8BA,UAA9B;MACMC,mBAAmBD,UAAzB;;SAEOF,QAAQI,KAAR,CAAcD,gBAAd,CAAP;;MAEME,SAASL,QAAQG,gBAAR,CAAf,CAN6C;SAOtCG,MAAMC,aAAN,EAAqBF,MAArB,CAAP;;;ACRF,IAAMG,iBAAiB,WAAvB;AACA,IAAMC,WAAWC,QAAQC,GAAR,EAAjB;;AAEA,SAASC,MAAT,CAAgBP,MAAhB,EAAwB;SACfQ,OAAOD,MAAP,CACLC,OAAOC,IAAP,CAAYT,MAAZ,EAAoBU,MAApB,CAA2B,UAACC,MAAD,EAASC,GAAT,EAAiB;QACpCC,aAAa,EAAEC,YAAY,IAAd,EAAnB;QACI,OAAOd,OAAOY,GAAP,CAAP,KAAuB,UAA3B,EAAuC;iBAC1BN,GAAX,GAAiBN,OAAOY,GAAP,CAAjB;KADF,MAEO;iBACMG,KAAX,GAAmBf,OAAOY,GAAP,CAAnB;;WAEKJ,OAAOQ,cAAP,CAAsBL,MAAtB,EAA8BC,GAA9B,EAAmCC,UAAnC,CAAP;GAPF,EAQG,EARH,CADK,CAAP;;;AAaF,AAAe,SAASI,SAAT,GAAqB;MAC5BpB,aAAaqB,KAAKC,OAAL,CAAaf,QAAb,cAAiCD,cAAjC,CAAnB;KACGiB,cAAH,CAAkBvB,UAAlB;MACMG,SAASJ,WAAWC,UAAX,CAAf;;SAEOU,OAAOP,MAAP,CAAP;;;;;"}