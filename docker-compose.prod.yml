version: '2'

services:
  data_store:
    image: busybox
    container_name: boldr-data_store
    tty: true
    stdin_open: true
    volumes:
      - "./docker/volumes/public:/home/boldr-cms/public:rw"
      - "./docker/volumes/redis/data:/data:rw"
      - "./docker/volumes/logs/db:/var/log:rw"
      - "./docker/postgres/configs:/docker-entrypoint-initdb.d:ro"

  nginx:
    image: evild/alpine-nginx:mainline
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./docker/volumes/nginx/conf.d:/etc/nginx/conf.d"
      - "/usr/share/nginx/html"
      - "./docker/volumes/nginx/certs:/etc/nginx/certs:ro"
      - "./docker/volumes/nginx/conf/nginx.conf:/etc/nginx/nginx.conf"
    networks:
      - proxy-tier

  nginx-gen:
    image: jwilder/docker-gen
    container_name: nginx-gen
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "./docker/docker-gen/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
    volumes_from:
      - nginx
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -only-exposed -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./docker/volumes/nginx/certs:/etc/nginx/certs:rw"
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=nginx-gen

  boldr-cms:
    image: strues/boldr-cms:0.3.9
    container_name: boldr-cms
    command: npm run start:prod
    environment:
      - VIRTUAL_HOST=staging.boldr.io
      - VIRTUAL_NETWORK=nginx-proxy
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=staging.boldr.io
      - LETSENCRYPT_EMAIL=steven@boldr.io
    ports:
      - "9221:9221"
    volumes:
      - "./docker/volumes/nginx/conf.d/:/etc/nginx/conf.d"
    networks:
      - boldr
      - proxy-tier
    links:
      - boldr-api

  boldr-api:
    image: strues/boldr-api
    container_name: boldr-api
    command: npm run start:prod
    environment:
      - database__host=db
      - database__user=boldr
      - database__password=password
      - database__name=boldr
      - redis__host=redis_ds
      # - redis__port=6379
    networks:
      - proxy-tier
      - boldr
    ports:
      - "9121:9121"
  db:
    container_name: boldr-db
    image: strues/postgres
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      # - POSTGRES_DB
      # - PGDATA="./docker/volumes/db"
    ports:
      - "5432:5432"
    volumes_from:
      - data_store
    networks:
      - boldr
      - proxy-tier
    links:
      - "boldr-api"

  redis_ds:
    image: strues/redis
    container_name: boldr-redis
    ports:
      - "6379:6379"
    volumes_from:
      - data_store
    networks:
      - proxy-tier
      - boldr
    links:
      - "boldr-api"

networks:
  boldr:
    driver: bridge
  proxy-tier:
    external:
      name: nginx-proxy

volumes:
  data_store:
    driver: local
